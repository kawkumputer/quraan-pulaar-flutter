plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "mr.quran_pulaar"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lint {
        disable 'UnsafeOptInUsageError'
        abortOnError false
        checkReleaseBuilds false
        checkDependencies true
    }

    signingConfigs {
        release {
            storeFile file("quran-pulaar-key.keystore")
            keyAlias "quran-pulaar-key-alias"  // You'll need to provide this
            storePassword "MRQuranPulaar2021"  // You'll need to provide this
            keyPassword "MRQuranPulaar2021"  // You'll need to provide this
        }
    }

    defaultConfig {
        applicationId "mr.quran_pulaar"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode 2072
        versionName "2.7.2"
        multiDexEnabled true
        ndk {
            debugSymbolLevel 'FULL'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:32.7.2')
    implementation 'com.google.android.gms:play-services-ads:22.6.0'
    implementation 'androidx.multidex:multidex:2.0.1'
}
