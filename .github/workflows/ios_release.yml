name: iOS Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode.app

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.2'
          channel: 'stable'
          cache: true

      - name: Install Flutter dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod repo update

      - name: Import Signing Certificate
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE }}
          P12_PASSWORD: "12345"
          KEYCHAIN_PASSWORD: "temporary_keychain_password"
        run: |
          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -l build.keychain

          # Import certificate to keychain
          echo $CERTIFICATE_BASE64 | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

          # Clean up
          rm certificate.p12

      - name: Import Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
        run: |
          echo $PROVISIONING_PROFILE_BASE64 | base64 --decode > provisioning.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp provisioning.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          rm provisioning.mobileprovision

      - name: Build iOS app
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
          IPHONEOS_DEPLOYMENT_TARGET: '12.0'
        run: |
          # Clean everything first
          flutter clean
          cd ios
          rm -rf Pods Podfile.lock
          rm -rf .symlinks/plugins/*
          cd ..
          
          # Get dependencies and prepare
          flutter pub get
          
          # Create fresh iOS setup
          cd ios
          rm -rf Flutter/Flutter.framework Flutter/Flutter.podspec
          flutter precache --ios
          cd ..
          
          # Build Flutter module first
          flutter build ios-framework --no-debug --no-profile --release
          
          # Copy the framework to the correct location
          cd ios
          mkdir -p Frameworks
          cp -R ../build/ios/framework/Release/Flutter.framework Frameworks/
          
          # Update Podfile to use local Flutter framework
          cat > Podfile << EOL
          platform :ios, '12.0'
          
          flutter_application_path = '..'
          load File.join(flutter_application_path, '.ios', 'Flutter', 'podhelper.rb')
          
          target 'Runner' do
            use_frameworks!
            use_modular_headers!
            
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
            
            post_install do |installer|
              installer.pods_project.targets.each do |target|
                flutter_additional_ios_build_settings(target)
                target.build_configurations.each do |config|
                  config.build_settings['ENABLE_BITCODE'] = 'NO'
                  config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
                  config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
                end
              end
            end
          end
          EOL
          
          # Install pods with verbose output
          pod install --verbose
          
          # Build the app
          xcodebuild \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -archivePath build/Runner.xcarchive \
            archive \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            ONLY_ACTIVE_ARCH=NO \
            ARCHS="arm64" \
            FRAMEWORK_SEARCH_PATHS="$(pwd)/Frameworks $(inherited)" \
            -verbose

      - name: Upload to App Store Connect
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        run: |
          xcrun altool --upload-app --type ios --file "build/ios/ipa/mr.quraanpulaar.ipa" --apiKey "$APP_STORE_CONNECT_API_KEY" --apiIssuer "$APP_STORE_CONNECT_ISSUER_ID"
