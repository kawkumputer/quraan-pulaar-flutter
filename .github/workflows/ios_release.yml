name: iOS Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode.app

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.2'
          channel: 'stable'
          cache: true

      - name: Install Flutter dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod repo update

      - name: Import Signing Certificate
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE }}
          P12_PASSWORD: "12345"
          KEYCHAIN_PASSWORD: "temporary_keychain_password"
        run: |
          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -l build.keychain

          # Import certificate to keychain
          echo $CERTIFICATE_BASE64 | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

          # Clean up
          rm certificate.p12

      - name: Import Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
        run: |
          echo $PROVISIONING_PROFILE_BASE64 | base64 --decode > provisioning.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp provisioning.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          rm provisioning.mobileprovision

      - name: Build iOS app
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
          IPHONEOS_DEPLOYMENT_TARGET: '12.0'
        run: |
          # Debug: Print Flutter and environment info
          flutter doctor -v
          flutter --version
          
          # Clean Flutter and get dependencies
          flutter clean
          flutter pub get
          
          # Prepare iOS build environment
          cd ios
          rm -rf Pods Podfile.lock
          rm -rf .symlinks/plugins/*
          cd ..
          
          # Generate project files
          flutter create . --platforms=ios
          
          # Ensure Flutter is properly set up
          flutter precache --ios
          flutter pub get
          
          # Build Flutter module
          cd ios
          
          # Debug: Check Flutter framework location
          ls -la Flutter/
          ls -la Pods/Flutter/ || echo "Flutter pod not found"
          
          # Clean and reinstall pods with verbose logging
          pod cache clean --all
          pod install --repo-update --verbose
          
          # Debug: Verify framework paths
          find . -name "Flutter.framework"
          
          # Build using xcodebuild
          xcodebuild \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -archivePath build/Runner.xcarchive \
            archive \
            CODE_SIGN_STYLE=Manual \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            ONLY_ACTIVE_ARCH=NO \
            ARCHS="arm64" \
            -verbose

      - name: Upload to App Store Connect
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        run: |
          xcrun altool --upload-app --type ios --file "build/ios/ipa/mr.quraanpulaar.ipa" --apiKey "$APP_STORE_CONNECT_API_KEY" --apiIssuer "$APP_STORE_CONNECT_ISSUER_ID"
