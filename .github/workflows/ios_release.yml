name: iOS Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode.app

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.2'
          channel: 'stable'

      - name: Install Flutter dependencies
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod repo update

      - name: Import Signing Certificate
        env:
          CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE }}
          P12_PASSWORD: "12345"
          KEYCHAIN_PASSWORD: "temporary_keychain_password"
        run: |
          # Create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" build.keychain
          security set-keychain-settings -t 3600 -l build.keychain

          # Import certificate to keychain
          echo $CERTIFICATE_BASE64 | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "$P12_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$KEYCHAIN_PASSWORD" build.keychain

          # Clean up
          rm certificate.p12

      - name: Import Provisioning Profile
        env:
          PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE }}
        run: |
          echo $PROVISIONING_PROFILE_BASE64 | base64 --decode > provisioning.mobileprovision
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp provisioning.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          rm provisioning.mobileprovision

      - name: Clean and update dependencies
        run: |
          cd ios
          rm -rf Pods Podfile.lock
          pod cache clean --all
          pod repo update
          pod install --repo-update --verbose

      - name: Configure Xcode project
        run: |
          cd ios
          ruby -e '
            require "xcodeproj"
            project_path = "Runner.xcodeproj"
            project = Xcodeproj::Project.open(project_path)
          
            # Set manual signing for Runner target only
            project.targets.each do |target|
              if target.name == "Runner"
                target.build_configurations.each do |config|
                  config.build_settings["CODE_SIGN_STYLE"] = "Manual"
                  config.build_settings["DEVELOPMENT_TEAM"] = "94VW99RYDQ"
                  config.build_settings["PROVISIONING_PROFILE_SPECIFIER"] = "Quraan Pulaar App2"
                  config.build_settings["CODE_SIGN_IDENTITY"] = "iPhone Distribution: Hamath Moussa Kane (94VW99RYDQ)"
                end
              end
            end
            project.save
          '

      - name: Build iOS app
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
          IPHONEOS_DEPLOYMENT_TARGET: '12.0'
        run: |
          flutter build ios --release --no-codesign
          cd ios
          
          # Clean the build directory
          xcodebuild clean -workspace Runner.xcworkspace -scheme Runner \
            -destination "generic/platform=iOS"
          
          # Archive with explicit build settings
          xcodebuild archive \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -configuration Release \
            -destination "generic/platform=iOS" \
            -sdk iphoneos \
            -archivePath "build/Runner.xcarchive" \
            -allowProvisioningUpdates \
            -allowProvisioningDeviceRegistration \
            DEVELOPMENT_TEAM="94VW99RYDQ" \
            PROVISIONING_PROFILE_SPECIFIER="Quraan Pulaar App2" \
            CODE_SIGN_IDENTITY="iPhone Distribution: Hamath Moussa Kane (94VW99RYDQ)" \
            CODE_SIGN_STYLE=Manual \
            PRODUCT_BUNDLE_IDENTIFIER="mr.quraanpulaar" \
            ENABLE_BITCODE=NO \
            DEBUG_INFORMATION_FORMAT="dwarf-with-dsym" \
            ARCHS="arm64" \
            ONLY_ACTIVE_ARCH=NO \
          BUILD_RESULT=$?
          
          # Check if archive was successful
          if [ $BUILD_RESULT -ne 0 ] || [ ! -d "build/Runner.xcarchive" ]; then
            echo "Archive failed with exit code: $BUILD_RESULT"
            exit 1
          fi
    

      - name: Export IPA
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
        run: |
          # Disable forking safety and increase processes
          export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
          export MAX_LAUNCHING_PROCESSES=2000
          cd ios
          # Export archive with xcpretty disabled for better error reporting
          xcodebuild -exportArchive \
            -archivePath build/Runner.xcarchive \
            -exportOptionsPlist exportOptions.plist \
            -exportPath build/Runner.ipa \
            -allowProvisioningUpdates \
            -allowAutomaticSigning \
            || exit 1

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-build
          path: |
            ios/build/Runner.xcarchive
            ios/build/Runner.ipa
          retention-days: 5

      - name: Upload to App Store Connect
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: ios/build/Runner.ipa
          issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          api-key-id: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          api-private-key: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
